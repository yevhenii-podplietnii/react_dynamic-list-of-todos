{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterParam","TodoInfo","todos","selectedTodoId","onSelectTodoId","map","todo","id","title","completed","selected","className","classNames","type","onClick","handleClick","TodoList","TodoFilter","setVisibleTodos","useState","searchText","setSearchText","All","filterBy","setFilterBy","useEffect","filter","toLowerCase","includes","onChange","event","target","value","handleFilterParam","Active","Completed","placeholder","handleSearchText","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","email","name","phone","selectedUser","setSelectedUser","isLoaded","setIsLoaded","selectedUserId","userId","response","href","App","setTodos","setSelectedTodoId","find","visibleTodos","length","ReactDOM","render","document","getElementById"],"mappings":"iLAGKA,E,mECOQC,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAMA,OACE,gCACGF,EAAMG,KAAI,SAAAC,GACT,IAAQC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UACbC,EAAWP,IAAmBI,EAEpC,OACE,qBAEE,UAAQ,OACRI,UAAWC,IACT,CAAE,4BAA6BF,IAJnC,UAOE,oBAAIC,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,eAAd,SACGF,GACC,sBAAME,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWC,IACT,CAAE,mBAAoBH,GACtB,CAAE,mBAAoBA,IAH1B,SAMGD,MAGL,oBAAIG,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVE,KAAK,SACLC,QAAS,kBAzCH,SAACP,GACnBH,EAAeG,GAwCYQ,CAAYR,IAJ7B,SAME,sBAAMI,UAAU,OAAhB,SACE,mBAAGA,UAAWC,IACZ,MACA,CAAE,UAAWF,GACb,CAAE,eAAgBA,cAnCrBH,SCjBJS,EAA4B,SAAC,GAInC,IAHLd,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEA,OACE,wBAAOO,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,cAAC,EAAD,CACET,MAAOA,EACPC,eAAgBA,EAChBC,eAAgBA,S,SF9BnBJ,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KAWE,IAAMiB,EAA8B,SAAC,GAGrC,IAFLf,EAEI,EAFJA,MACAgB,EACI,EADJA,gBAEA,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAiBnB,EAAYsB,KAA7D,mBAAOC,EAAP,KAAiBC,EAAjB,KA2BA,OAjBAC,qBAAU,WACRP,EAAgBhB,EAAMwB,QAAO,YAAoB,IAAjBjB,EAAgB,EAAhBA,UAC9B,OAAQc,GACN,IAAK,SACH,OAAQd,EAEV,IAAK,YACH,OAAOA,EAET,QACE,OAAO,MAEViB,QAAO,qBAAGlB,MACLmB,cAAcC,SAASR,EAAWO,qBAEzC,CAACJ,EAAUH,IAGZ,uBAAMT,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACEkB,SAAU,SAAAC,GAAK,OA9BC,SAACA,GACzBN,EAAYM,EAAMC,OAAOC,OA6BEC,CAAkBH,IACrC,UAAQ,eAFV,UAIE,wBAAQE,MAAOhC,EAAYsB,IAA3B,iBAGA,wBAAQU,MAAOhC,EAAYkC,OAA3B,oBAGA,wBAAQF,MAAOhC,EAAYmC,UAA3B,8BAON,oBAAGxB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRE,KAAK,OACLF,UAAU,QACVyB,YAAY,YACZJ,MAAOZ,EACPS,SAAU,SAACC,GAAD,OAjDO,SAACA,GACxBT,EAAcS,EAAMC,OAAOC,OAgDAK,CAAiBP,MAExC,sBAAMnB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgB2B,MAAO,CAAEC,cAAe,OAAxD,SAEGnB,GAGG,wBACE,UAAQ,oBACRP,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAMO,EAAc,gBG7E7C,SAASmB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,IClBMC,EAAmB,kBAC9B,qBAAKxC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMNyC,EAA6B,SAAC,GAGpC,IAFLC,EAEI,EAFJA,aACAjD,EACI,EADJA,eAEA,EAAwCe,mBAAe,CACrDmC,MAAO,GACP/C,GAAI,EACJgD,KAAM,GACNC,MAAO,KAJT,mBAAOC,EAAP,KAAqBC,EAArB,KAMA,EAAgCvC,oBAAS,GAAzC,mBAAOwC,EAAP,KAAiBC,EAAjB,KACIC,EAAiB,EACbN,EAAgBE,EAAhBF,KAAMD,EAAUG,EAAVH,MAEVD,IACFQ,EAAiBR,EAAaS,QAchC,OAPArC,qBAAU,WFVW,IAACqC,KEWZD,EFX+BrB,EAAG,iBAAiBsB,KEWnCf,MAAK,SAACgB,GAC5BL,EAAgBK,GAChBH,GAAY,QAEb,IAEIP,GACL,sBAAK1C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbgD,EAGA,sBAAKhD,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIY0C,QAJZ,IAIYA,OAJZ,EAIYA,EAAc9C,MAI1B,wBACEM,KAAK,SACLF,UAAU,SACV,UAAQ,cACRG,QAAS,WA/BnBV,EA+BqC,SAI/B,sBAAKO,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACG0C,QADH,IACGA,OADH,EACGA,EAAc7C,QAGjB,oBAAGG,UAAU,QAAQ,UAAQ,aAA7B,UAEe,OAAZ0C,QAAY,IAAZA,KAAc5C,UACX,wBAAQE,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGqD,KAAI,iBAAYV,GAAnB,SACGC,aAlCT,cAAC,EAAD,QCjCKU,EAAgB,WAC3B,MAA0B9C,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAcgE,EAAd,KACA,EAAgC/C,oBAAS,GAAzC,mBAAOwC,EAAP,KAAiBC,EAAjB,KACA,EAA4CzC,mBAAS,GAArD,mBAAOhB,EAAP,KAAuBgE,EAAvB,KACMd,EAAenD,EAAMkE,MAAK,SAAA9D,GAAI,OAAIA,EAAKC,KAAOJ,MAAmB,KACvE,EAAwCgB,mBAAiB,IAAzD,mBAAOkD,EAAP,KAAqBnD,EAArB,KAeA,OAbAO,qBAAU,WHEkBe,EAAY,UGD3BO,MAAK,SAACgB,GACfG,EAASH,GACTH,GAAY,QAEb,IAEHnC,qBAAU,WACJvB,EAAMoE,QACRpD,EAAgBhB,KAEjB,CAACA,EAAMoE,SAGR,qCACE,qBAAK3D,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYT,MAAOA,EAAOgB,gBAAiBA,MAG7C,qBAAKP,UAAU,QAAf,SACIgD,EAEE,cAAC,EAAD,CACEzD,MAAOmE,EACPlE,eAAgBA,EAChBC,eAAgB+D,IAGlB,cAAC,EAAD,aAKQ,IAAnBhE,GACI,cAAC,EAAD,CAAWkD,aAAcA,EAAcjD,eAAgB+D,QCvDlEI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8df1d7ec.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nenum FilterParam {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\ntype Props = {\n  todos: Todo[];\n  setVisibleTodos: (visibleTodos: Todo[]) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  setVisibleTodos,\n}) => {\n  const [searchText, setSearchText] = useState('');\n  const [filterBy, setFilterBy] = useState<string>(FilterParam.All);\n\n  const handleFilterParam = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.target.value);\n  };\n\n  const handleSearchText = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(event.target.value);\n  };\n\n  useEffect(() => {\n    setVisibleTodos(todos.filter(({ completed }) => {\n      switch (filterBy) {\n        case 'active':\n          return !completed;\n\n        case 'completed':\n          return completed;\n\n        default:\n          return true;\n      }\n    }).filter(({ title }) => (\n      title.toLowerCase().includes(searchText.toLowerCase())\n    )));\n  }, [filterBy, searchText]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={event => handleFilterParam(event)}\n            data-cy=\"statusSelect\"\n          >\n            <option value={FilterParam.All}>\n              All\n            </option>\n            <option value={FilterParam.Active}>\n              Active\n            </option>\n            <option value={FilterParam.Completed}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchText}\n          onChange={(event) => handleSearchText(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {searchText\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setSearchText('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelectTodoId: (id: number) => void;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodoId,\n}) => {\n  const handleClick = (id: number) => {\n    onSelectTodoId(id);\n  };\n\n  return (\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n        const selected = selectedTodoId === id;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selected },\n            )}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-success': completed },\n                  { 'has-text-danger': !completed },\n                )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': !selected },\n                    { 'fa-eye-slash': selected },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelectTodoId: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <TodoInfo\n        todos={todos}\n        selectedTodoId={selectedTodoId}\n        onSelectTodoId={onSelectTodoId}\n      />\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  onSelectTodoId: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSelectTodoId,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User>({\n    email: '',\n    id: 0,\n    name: '',\n    phone: '',\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  let selectedUserId = 0;\n  const { name, email } = selectedUser;\n\n  if (selectedTodo) {\n    selectedUserId = selectedTodo.userId;\n  }\n\n  const handleClick = (id: number) => {\n    onSelectTodoId(id);\n  };\n\n  useEffect(() => {\n    getUser(selectedUserId).then((response) => {\n      setSelectedUser(response);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  return selectedTodo && (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleClick(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const selectedTodo = todos.find(todo => todo.id === selectedTodoId) || null;\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then((response) => {\n      setTodos(response);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (todos.length) {\n      setVisibleTodos(todos);\n    }\n  }, [todos.length]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter todos={todos} setVisibleTodos={setVisibleTodos} />\n            </div>\n\n            <div className=\"block\">\n              { isLoaded\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelectTodoId={setSelectedTodoId}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodoId !== 0\n        && <TodoModal selectedTodo={selectedTodo} onSelectTodoId={setSelectedTodoId} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}